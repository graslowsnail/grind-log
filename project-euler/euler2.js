// euler 2
//
// Each new term in the Fibonacci sequence is generated by adding the previous two terms
// By starting with 1 and 2, the first 10 terms will be:
//
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//
// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

// generate the fibbonacci sequence up to 4 million
// check if each term is even
// sum of all the even terms

let fibArry = [1,2];
let isEven = 0

for (let i = 1 ; i <= 31; i ++) {
    if (fibArry[1] % 2 === 0) {
    isEven = Number(fibArry[1]) + isEven; 
    console.log(fibArry[1] + 'IS EVEN')
    console.log(isEven + "even SUM ")
  }
  let sum = fibArry[0] + fibArry[1];

  if ( sum <= 4000000) {
    fibArry.shift()
    fibArry.push(sum);
    console.log(sum);
  }
};


// answer is  4613732 
// they was for the sum of the numbers that are less than 4 million
// not for the sum to be less than 4 million 
// Watch out next time 
